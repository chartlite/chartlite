name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Version bump
        run: |
          # Bump version in core package first
          cd packages/core
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          cd ../..

          # Update VERSION constant in code
          sed -i "s/export const VERSION = '.*';/export const VERSION = '$NEW_VERSION';/" packages/core/src/index.ts

          # Update all other packages to match
          cd packages/react
          npm version $NEW_VERSION --no-git-tag-version
          cd ../..

          # Update root package.json
          npm version $NEW_VERSION --no-git-tag-version

          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update CHANGELOG
        run: |
          DATE=$(date +%Y-%m-%d)
          VERSION=${{ env.NEW_VERSION }}

          # Create CHANGELOG.md if it doesn't exist
          if [ ! -f CHANGELOG.md ]; then
            echo "# Changelog" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "All notable changes to this project will be documented in this file." >> CHANGELOG.md
            echo "" >> CHANGELOG.md
          fi

          # Add new version entry
          sed -i "3i\\## [$VERSION] - $DATE\n\n### Added\n- \n\n### Changed\n- \n\n### Fixed\n- \n" CHANGELOG.md

      - name: Commit changes
        run: |
          git add .
          git commit -m "chore: release v${{ env.NEW_VERSION }}"
          git tag -a "v${{ env.NEW_VERSION }}" -m "Release v${{ env.NEW_VERSION }}"

      - name: Push changes
        run: |
          git push origin main
          git push origin "v${{ env.NEW_VERSION }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.NEW_VERSION }}
          name: Release v${{ env.NEW_VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Installation

            ```bash
            npm install @chartlite/core@${{ env.NEW_VERSION }}
            npm install @chartlite/react@${{ env.NEW_VERSION }}
            ```

            ## Changes

            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for full details.
